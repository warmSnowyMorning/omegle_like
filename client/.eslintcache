[{"/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/index.js":"1","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/App.js":"2","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/context/SocketContext.js":"3","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/Dashboard.js":"4","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/Chat.js":"5","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/RoomsList.js":"6","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/RoomsListItem.js":"7","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/MessagesList.js":"8","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/MessagesListItem.js":"9"},{"size":141,"mtime":1608428196970,"results":"10","hashOfConfig":"11"},{"size":922,"mtime":1608428185520,"results":"12","hashOfConfig":"11"},{"size":63,"mtime":1608428185430,"results":"13","hashOfConfig":"11"},{"size":2066,"mtime":1608528269110,"results":"14","hashOfConfig":"11"},{"size":1173,"mtime":1608580340940,"results":"15","hashOfConfig":"11"},{"size":359,"mtime":1608499306850,"results":"16","hashOfConfig":"11"},{"size":826,"mtime":1608514681490,"results":"17","hashOfConfig":"11"},{"size":301,"mtime":1608580282880,"results":"18","hashOfConfig":"11"},{"size":236,"mtime":1608580315170,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"gh0feg",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/index.js",[],["42","43"],"/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/App.js",["44","45"],"import React, { useEffect } from 'react'\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Dashboard from './components/Dashboard'\nimport io from 'socket.io-client'\nimport SocketContext from './context/SocketContext'\n\nconst socket = io('http://localhost:5000', { transports: ['websocket'] });\n\nexport default () => {\n\n\n  return (\n    <Router>\n      <SocketContext.Provider value={socket}>\n        <Route path=\"/\" exact component={Dashboard} />\n        <Route path=\"/chat\" exact component={() => <h1>Chat!!</h1>} />\n      </SocketContext.Provider>\n\n    </Router>\n  )\n}","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/context/SocketContext.js",[],"/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/Dashboard.js",["46"],"import React, { useContext, useEffect, useState } from 'react';\n// import { Link } from 'react-router-dom';\nimport SocketContext from '../context/SocketContext';\nimport RoomsList from './RoomsList';\nimport { v4 as uuid } from 'uuid'\n\nconst Dashboard = (props) => {\n  const { history } = props\n  const mySocket = useContext(SocketContext)\n  const [roomName, set_roomName] = useState('')\n  const [topic, set_topic] = useState('')\n  const [capacity, set_capacity] = useState('')\n  const [rooms, set_rooms] = useState([])\n\n  useEffect(() => {\n    mySocket.on('updateRoomsList', ({ rooms: newRooms }) => {\n      console.log('some update')\n      set_rooms(Object.entries(newRooms))\n    })\n    mySocket.emit('getRooms', (err, { rooms: allRooms }) => {\n      if (err) return console.log(err)\n      console.log(allRooms, err)\n      set_rooms(Object.entries(allRooms))\n    })\n\n    return () => {\n      mySocket.removeAllListeners()\n    }\n  }, [])\n\n  const handleRoomCreate = (e) => {\n    e.preventDefault()\n    // console.log(props.history.push('/chat'))\n    // handleRoomCreate\n    mySocket.emit('createRoom', {\n      roomName,\n      roomId: uuid(),\n      topic,\n      capacity\n    }, (err, res) => {\n      if (err) return console.log('error')\n      console.log(res, 'success')\n\n      history.push(`/chat/${mySocket.id}`)\n    })\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleRoomCreate}>\n        <h1>Create a new room!!!</h1>\n        <label>\n          Room Name\n        <input type='text' value={roomName} onChange={(e) => set_roomName(e.target.value)} />\n        </label>\n        <label>\n          Topic\n        <input type='text' value={topic} onChange={(e) => set_topic(e.target.value)} />\n        </label>\n        <label>\n          max capacityu\n        <input type='number' value={capacity} onChange={(e) => set_capacity(e.target.value)} />\n        </label>\n        <button type='submit'>Create!</button>\n      </form>\n      <button onClick={() => console.log(props)}>click</button>\n      <RoomsList rooms={rooms} />\n    </div>\n  );\n}\n\nexport default Dashboard;\n","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/Chat.js",["47"],"/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/RoomsList.js",[],"/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/RoomsListItem.js",["48"],"import React, { useContext } from 'react';\nimport SocketContext from '../context/SocketContext';\nimport { withRouter } from 'react-router-dom'\n\nconst RoomsListItem = (props) => {\n  const { history } = props\n  const { host, roomName, roomId, ...rest } = props.roomInfo\n  const mySocket = useContext(SocketContext)\n\n  const handleRoomJoin = (e) => {\n    e.preventDefault()\n    mySocket.emit('joinRoom', { host, roomId }, (err, data) => {\n      console.log(props)\n      if (err) return console.log(err)\n      console.log(data)\n      history.push(`/chat/${host}`)\n    })\n  }\n  return (\n    <div style={{ border: '1px solid red' }}>\n      <h1>{roomName}</h1>\n      <button onClick={handleRoomJoin}>Join</button>\n      <pre>{JSON.stringify(props.roomInfo, null, 2)}</pre>\n    </div>\n  )\n}\n\nexport default withRouter(RoomsListItem);\n","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/MessagesList.js",[],"/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/MessagesListItem.js",[],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":26},{"ruleId":"57","severity":1,"message":"58","line":10,"column":1,"nodeType":"59","endLine":22,"endColumn":2},{"ruleId":"60","severity":1,"message":"61","line":29,"column":6,"nodeType":"62","endLine":29,"endColumn":8,"suggestions":"63"},{"ruleId":"60","severity":1,"message":"64","line":31,"column":6,"nodeType":"62","endLine":31,"endColumn":8,"suggestions":"65"},{"ruleId":"53","severity":1,"message":"66","line":7,"column":38,"nodeType":"55","messageId":"56","endLine":7,"endColumn":42},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'mySocket'. Either include it or remove the dependency array.","ArrayExpression",["69"],"React Hook useEffect has missing dependencies: 'history', 'location.pathname', and 'mySocket'. Either include them or remove the dependency array.",["70"],"'rest' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},{"desc":"73","fix":"74"},"Update the dependencies array to be: [mySocket]",{"range":"75","text":"76"},"Update the dependencies array to be: [history, location.pathname, mySocket]",{"range":"77","text":"78"},[933,935],"[mySocket]",[1053,1055],"[history, location.pathname, mySocket]"]