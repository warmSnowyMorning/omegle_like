[{"/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/index.js":"1","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/App.js":"2","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/context/SocketContext.js":"3","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/Dashboard.js":"4","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/Chat.js":"5","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/RoomsList.js":"6","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/RoomsListItem.js":"7","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/MessagesList.js":"8","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/MessagesListItem.js":"9","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/utils/generateChatUrl.js":"10"},{"size":141,"mtime":1608428196970,"results":"11","hashOfConfig":"12"},{"size":918,"mtime":1608593492800,"results":"13","hashOfConfig":"12"},{"size":63,"mtime":1608428185430,"results":"14","hashOfConfig":"12"},{"size":2197,"mtime":1608657277300,"results":"15","hashOfConfig":"12"},{"size":2211,"mtime":1608594140700,"results":"16","hashOfConfig":"12"},{"size":288,"mtime":1608657432280,"results":"17","hashOfConfig":"12"},{"size":964,"mtime":1608657542100,"results":"18","hashOfConfig":"12"},{"size":301,"mtime":1608580282880,"results":"19","hashOfConfig":"12"},{"size":850,"mtime":1608615082410,"results":"20","hashOfConfig":"12"},{"size":91,"mtime":1608581868970,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"gh0feg",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/index.js",[],["47","48"],"/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/App.js",["49"],"import React, { useEffect, useState } from 'react'\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Dashboard from './components/Dashboard'\nimport io from 'socket.io-client'\nimport SocketContext from './context/SocketContext'\nimport Chat from './components/Chat'\n\n\nexport default () => {\n  const [mySocket, set_mySocket] = useState(null)\n  useEffect(() => {\n    const socket = io('http://localhost:5000', { transports: ['websocket'] });\n    socket.on('connect', () => {\n      setTimeout(() => {\n        set_mySocket(socket)\n      }, 500);\n    })\n\n  }, [])\n\n  return (\n    <div>\n      {mySocket ? (\n        <Router>\n          <SocketContext.Provider value={mySocket}>\n            <Route path=\"/\" exact component={Dashboard} />\n            <Route path=\"/chat\" exact component={Chat} />\n          </SocketContext.Provider>\n\n        </Router>\n      ) :\n        (<h1>Loading</h1>)}\n    </div>\n  )\n}","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/context/SocketContext.js",[],"/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/Dashboard.js",["50","51"],"/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/Chat.js",["52","53","54"],"import React, { useContext, useEffect, useRef, useState } from 'react';\nimport { withRouter } from 'react-router-dom'\nimport SocketContext from '../context/SocketContext';\nimport MessagesList from './MessagesList';\nimport queryString from 'query-string'\n\nconst Chat = (props) => {\n  const { history, location } = props\n  const mySocket = useContext(SocketContext)\n  const [messages, set_messages] = useState([])\n  const [message, set_message] = useState('')\n  const messagesRef = useRef([])\n\n\n  useEffect(() => {\n    const { host, room: roomId, anon: anonId } = queryString.parse(location.search)\n\n    mySocket.on('leaveRoom', (data) => {\n      console.log(data)\n      history.push('/')\n      console.log('LEAVEROOM EVERYONE')\n    })\n    mySocket.on('someoneLeft', (data) => {\n      console.log(`user with the id of ${data.anonId} just left!`)\n    })\n    mySocket.on('sucessUserJoin', (data) => {\n      console.log(data.anonId, ' has just joined your room!!!')\n    })\n    mySocket.on('addMessage', ({ message: newMessage }) => {\n      console.log('addMessage', newMessage)\n      messagesRef.current.push(newMessage)\n      console.log(messagesRef.current)\n      set_messages([...messagesRef.current])\n    })\n\n    mySocket.emit('validateMe', { host }, (err, data) => {\n      console.log('validateMe Event')\n      if (err) return history.push('/')\n      const { messages: allMessages } = data\n      set_messages(allMessages)\n      messagesRef.current = allMessages\n    })\n\n    return () => mySocket.removeAllListeners()\n  }, [])\n\n  const sendNewMessage = (e) => {\n    e.preventDefault()\n    const { host, room: roomId, anon: anonId } = queryString.parse(location.search)\n\n    mySocket.emit('newMessage', { anonId, roomId, message, timestamp: new Date().valueOf(), host }, (err, data) => {\n      if (err) return console.log(err)\n      set_message('')\n    })\n  }\n  return (\n    <div>\n      <MessagesList messages={messages} />\n\n      <input\n        type='text'\n        onChange={e => set_message(e.target.value)}\n        value={message}\n        onKeyPress={e => e.key === 'Enter' && sendNewMessage(e)}\n        placeholder='type and press Enter to send!'\n      />\n\n    </div>\n  );\n}\n\nexport default withRouter(Chat);\n","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/RoomsList.js",[],"/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/RoomsListItem.js",["55"],"/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/MessagesList.js",[],"/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/MessagesListItem.js",["56","57","58"],"import React, { useContext } from 'react';\nimport SocketContext from '../context/SocketContext';\n\n\n//if returned userId is the same as mySocket.id then for the admin messages, override how they're written.\nconst MessagesListItem = (props) => {\n  const mySocket = useContext(SocketContext)\n  const { message } = props\n  const { type, host, roomId, anonId, userId, timestamp, message: content } = message\n\n  return (\n    <div style={{ border: '1px solid blue' }}>\n\n\n\n      <pre>\n        {JSON.stringify(message, null, 2)}\n        <h1>{userId === mySocket.id && type === 'ADMIN' ? content.includes('left') ? 'You\\'ve just left this room!' : 'You\\'ve just joined this room' : type === 'ADMIN' ? content : userId === mySocket.id ? `You: ${content}` : `Stranger ${anonId}: ${content}`}</h1>\n      </pre>\n    </div>\n  );\n}\n\nexport default MessagesListItem;\n","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/utils/generateChatUrl.js",["59"],"export default (host, roomId, anonId) => `/chat?host=${host}&room=${roomId}&anon=${anonId}`",{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":10,"column":1,"nodeType":"66","endLine":36,"endColumn":2},{"ruleId":"67","severity":1,"message":"68","line":7,"column":8,"nodeType":"69","messageId":"70","endLine":7,"endColumn":15},{"ruleId":"71","severity":1,"message":"72","line":35,"column":6,"nodeType":"73","endLine":35,"endColumn":8,"suggestions":"74"},{"ruleId":"67","severity":1,"message":"75","line":16,"column":25,"nodeType":"69","messageId":"70","endLine":16,"endColumn":31},{"ruleId":"67","severity":1,"message":"76","line":16,"column":39,"nodeType":"69","messageId":"70","endLine":16,"endColumn":45},{"ruleId":"71","severity":1,"message":"77","line":45,"column":6,"nodeType":"73","endLine":45,"endColumn":8,"suggestions":"78"},{"ruleId":"67","severity":1,"message":"79","line":8,"column":55,"nodeType":"69","messageId":"70","endLine":8,"endColumn":59},{"ruleId":"67","severity":1,"message":"80","line":9,"column":17,"nodeType":"69","messageId":"70","endLine":9,"endColumn":21},{"ruleId":"67","severity":1,"message":"75","line":9,"column":23,"nodeType":"69","messageId":"70","endLine":9,"endColumn":29},{"ruleId":"67","severity":1,"message":"81","line":9,"column":47,"nodeType":"69","messageId":"70","endLine":9,"endColumn":56},{"ruleId":"64","severity":1,"message":"65","line":1,"column":1,"nodeType":"66","endLine":1,"endColumn":92},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'produce' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'mySocket' and 'rooms'. Either include them or remove the dependency array.","ArrayExpression",["84"],"'roomId' is assigned a value but never used.","'anonId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'history', 'location.search', and 'mySocket'. Either include them or remove the dependency array.",["85"],"'rest' is assigned a value but never used.","'host' is assigned a value but never used.","'timestamp' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"86","fix":"87"},{"desc":"88","fix":"89"},"Update the dependencies array to be: [mySocket, rooms]",{"range":"90","text":"91"},"Update the dependencies array to be: [history, location.search, mySocket]",{"range":"92","text":"93"},[1060,1062],"[mySocket, rooms]",[1522,1524],"[history, location.search, mySocket]"]