[{"/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/index.js":"1","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/App.js":"2","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/context/SocketContext.js":"3","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/Dashboard.js":"4","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/Chat.js":"5","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/RoomsList.js":"6","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/RoomsListItem.js":"7","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/MessagesList.js":"8","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/MessagesListItem.js":"9","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/utils/generateChatUrl.js":"10","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/TypersList.js":"11","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/TypersListItem.js":"12"},{"size":141,"mtime":1608428196970,"results":"13","hashOfConfig":"14"},{"size":918,"mtime":1608593492800,"results":"15","hashOfConfig":"14"},{"size":63,"mtime":1608428185430,"results":"16","hashOfConfig":"14"},{"size":2197,"mtime":1608657277300,"results":"17","hashOfConfig":"14"},{"size":4766,"mtime":1608755895620,"results":"18","hashOfConfig":"14"},{"size":288,"mtime":1608657432280,"results":"19","hashOfConfig":"14"},{"size":964,"mtime":1608657542100,"results":"20","hashOfConfig":"14"},{"size":301,"mtime":1608580282880,"results":"21","hashOfConfig":"14"},{"size":850,"mtime":1608615082410,"results":"22","hashOfConfig":"14"},{"size":91,"mtime":1608581868970,"results":"23","hashOfConfig":"14"},{"size":302,"mtime":1608680920520,"results":"24","hashOfConfig":"14"},{"size":207,"mtime":1608680584040,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"gh0feg",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/index.js",[],["56","57"],"/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/App.js",["58"],"import React, { useEffect, useState } from 'react'\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Dashboard from './components/Dashboard'\nimport io from 'socket.io-client'\nimport SocketContext from './context/SocketContext'\nimport Chat from './components/Chat'\n\n\nexport default () => {\n  const [mySocket, set_mySocket] = useState(null)\n  useEffect(() => {\n    const socket = io('http://localhost:5000', { transports: ['websocket'] });\n    socket.on('connect', () => {\n      setTimeout(() => {\n        set_mySocket(socket)\n      }, 500);\n    })\n\n  }, [])\n\n  return (\n    <div>\n      {mySocket ? (\n        <Router>\n          <SocketContext.Provider value={mySocket}>\n            <Route path=\"/\" exact component={Dashboard} />\n            <Route path=\"/chat\" exact component={Chat} />\n          </SocketContext.Provider>\n\n        </Router>\n      ) :\n        (<h1>Loading</h1>)}\n    </div>\n  )\n}","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/context/SocketContext.js",[],"/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/Dashboard.js",["59","60"],"import React, { useContext, useEffect, useState } from 'react';\n// import { Link } from 'react-router-dom';\nimport SocketContext from '../context/SocketContext';\nimport RoomsList from './RoomsList';\nimport { v4 as uuid } from 'uuid'\nimport generateChatUrl from '../utils/generateChatUrl';\nimport produce from 'immer'\n\nconst Dashboard = (props) => {\n  const { history } = props\n  const mySocket = useContext(SocketContext)\n  const [roomName, set_roomName] = useState('')\n  const [topic, set_topic] = useState('')\n  const [capacity, set_capacity] = useState('')\n  const [rooms, set_rooms] = useState([])\n\n\n\n  useEffect(() => {\n    mySocket.on('updateRoomsList', ({ rooms: newRooms }) => {\n      console.log('some update')\n      console.log(rooms, 'rooms state')\n      set_rooms(Object.entries(newRooms))\n    })\n\n    mySocket.emit('getRooms', (err, { rooms: allRooms }) => {\n      if (err) return console.log(err)\n      console.log(allRooms, err)\n      set_rooms(Object.entries(allRooms))\n    })\n\n    return () => {\n      mySocket.removeAllListeners()\n    }\n  }, [])\n\n  const handleRoomCreate = (e) => {\n    e.preventDefault()\n    // console.log(props.history.push('/chat'))\n    // handleRoomCreate\n    const roomId = uuid()\n    mySocket.emit('createRoom', {\n      roomName,\n      roomId,\n      topic,\n      capacity: parseInt(capacity, 10)\n    }, (err, { anonId }) => {\n      if (err) return console.log('error')\n      console.log('success')\n\n      history.push(generateChatUrl(mySocket.id, roomId, anonId))\n    })\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleRoomCreate}>\n        <h1>Create a new room!!!</h1>\n        <label>\n          Room Name\n        <input type='text' value={roomName} onChange={(e) => set_roomName(e.target.value)} />\n        </label>\n        <label>\n          Topic\n        <input type='text' value={topic} onChange={(e) => set_topic(e.target.value)} />\n        </label>\n        <label>\n          max capacityu\n        <input type='number' value={capacity} onChange={(e) => set_capacity(e.target.value)} />\n        </label>\n        <button type='submit'>Create!</button>\n      </form>\n      <RoomsList rooms={rooms} />\n\n\n    </div>\n  );\n}\n\nexport default Dashboard;\n","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/Chat.js",["61","62","63","64","65"],"/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/RoomsList.js",[],"/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/RoomsListItem.js",["66"],"import React, { useContext } from 'react';\nimport SocketContext from '../context/SocketContext';\nimport { withRouter } from 'react-router-dom'\nimport generateChatUrl from '../utils/generateChatUrl';\n\nconst RoomsListItem = (props) => {\n  const { history } = props\n  const { host, roomName, roomId, users, capacity, ...rest } = props.roomInfo\n  const mySocket = useContext(SocketContext)\n  const handleRoomJoin = (e) => {\n    e.preventDefault()\n    mySocket.emit('joinRoom', { host, roomId }, (err, data) => {\n      console.log(props)\n      if (err) return console.log(err)\n      const { anonId } = data\n      history.push(generateChatUrl(host, roomId, anonId))\n    })\n  }\n  return (\n    <div style={{ border: '1px solid red' }}>\n      <h1>{roomName}</h1>\n      <button onClick={handleRoomJoin} disabled={!(users.length < capacity)}>Join</button>\n      <pre>{JSON.stringify(props.roomInfo, null, 2)}</pre>\n    </div>\n  )\n}\n\nexport default withRouter(RoomsListItem);\n","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/MessagesList.js",[],"/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/MessagesListItem.js",["67","68","69"],"import React, { useContext } from 'react';\nimport SocketContext from '../context/SocketContext';\n\n\n//if returned userId is the same as mySocket.id then for the admin messages, override how they're written.\nconst MessagesListItem = (props) => {\n  const mySocket = useContext(SocketContext)\n  const { message } = props\n  const { type, host, roomId, anonId, userId, timestamp, message: content } = message\n\n  return (\n    <div style={{ border: '1px solid blue' }}>\n\n\n\n      <pre>\n        {JSON.stringify(message, null, 2)}\n        <h1>{userId === mySocket.id && type === 'ADMIN' ? content.includes('left') ? 'You\\'ve just left this room!' : 'You\\'ve just joined this room' : type === 'ADMIN' ? content : userId === mySocket.id ? `You: ${content}` : `Stranger ${anonId}: ${content}`}</h1>\n      </pre>\n    </div>\n  );\n}\n\nexport default MessagesListItem;\n","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/utils/generateChatUrl.js",["70"],"export default (host, roomId, anonId) => `/chat?host=${host}&room=${roomId}&anon=${anonId}`","/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/TypersList.js",[],"/home/asdf_wsl2/Documents/hr/mvp_chat_app_CRA/client/src/components/TypersListItem.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":10,"column":1,"nodeType":"77","endLine":36,"endColumn":2},{"ruleId":"78","severity":1,"message":"79","line":7,"column":8,"nodeType":"80","messageId":"81","endLine":7,"endColumn":15},{"ruleId":"82","severity":1,"message":"83","line":35,"column":6,"nodeType":"84","endLine":35,"endColumn":8,"suggestions":"85"},{"ruleId":"78","severity":1,"message":"86","line":21,"column":25,"nodeType":"80","messageId":"81","endLine":21,"endColumn":31},{"ruleId":"78","severity":1,"message":"87","line":21,"column":39,"nodeType":"80","messageId":"81","endLine":21,"endColumn":45},{"ruleId":"88","severity":1,"message":"89","line":47,"column":34,"nodeType":"90","messageId":"91","endLine":47,"endColumn":36},{"ruleId":"82","severity":1,"message":"92","line":71,"column":6,"nodeType":"84","endLine":71,"endColumn":8,"suggestions":"93"},{"ruleId":"88","severity":1,"message":"89","line":80,"column":76,"nodeType":"90","messageId":"91","endLine":80,"endColumn":78},{"ruleId":"78","severity":1,"message":"94","line":8,"column":55,"nodeType":"80","messageId":"81","endLine":8,"endColumn":59},{"ruleId":"78","severity":1,"message":"95","line":9,"column":17,"nodeType":"80","messageId":"81","endLine":9,"endColumn":21},{"ruleId":"78","severity":1,"message":"86","line":9,"column":23,"nodeType":"80","messageId":"81","endLine":9,"endColumn":29},{"ruleId":"78","severity":1,"message":"96","line":9,"column":47,"nodeType":"80","messageId":"81","endLine":9,"endColumn":56},{"ruleId":"75","severity":1,"message":"76","line":1,"column":1,"nodeType":"77","endLine":1,"endColumn":92},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'produce' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'mySocket' and 'rooms'. Either include them or remove the dependency array.","ArrayExpression",["99"],"'roomId' is assigned a value but never used.","'anonId' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'history', 'location.search', and 'mySocket'. Either include them or remove the dependency array.",["100"],"'rest' is assigned a value but never used.","'host' is assigned a value but never used.","'timestamp' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [mySocket, rooms]",{"range":"105","text":"106"},"Update the dependencies array to be: [history, location.search, mySocket]",{"range":"107","text":"108"},[1060,1062],"[mySocket, rooms]",[2453,2455],"[history, location.search, mySocket]"]